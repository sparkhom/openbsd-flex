This is ./flex.info, produced by makeinfo version 4.8 from ./flex.texi.

INFO-DIR-SECTION Programming
START-INFO-DIR-ENTRY
* flex: (flex).      Fast lexical analyzer generator (lex replacement).
END-INFO-DIR-ENTRY

   The flex manual is placed under the same licensing conditions as the
rest of flex:

   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2012 The
Flex Project.

   Copyright (C) 1990, 1997 The Regents of the University of California.
All rights reserved.

   This code is derived from software contributed to Berkeley by Vern
Paxson.

   The United States Government has rights in this work pursuant to
contract no. DE-AC03-76SF00098 between the United States Department of
Energy and the University of California.

   Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

  1.  Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

  2. Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the
     distribution.

   Neither the name of the University nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

   THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


Indirect:
flex.info-1: 1630
flex.info-2: 288627

Tag Table:
(Indirect)
Node: Top1630
Node: Copyright7698
Node: Reporting Bugs9217
Node: Introduction9522
Node: Simple Examples10350
Node: Format13640
Node: Definitions Section14054
Ref: Definitions Section-Footnote-116317
Node: Rules Section16385
Node: User Code Section17543
Node: Comments in the Input17981
Node: Patterns19349
Ref: case and character ranges26180
Node: Matching30195
Node: Actions33481
Node: Generated Scanner42458
Node: Start Conditions47476
Node: Multiple Input Buffers58028
Ref: Scanning Strings64566
Node: EOF66196
Node: Misc Macros67784
Node: User Values70638
Node: Yacc72969
Node: Scanner Options73865
Node: Options for Specifying Filenames76623
Ref: option-header76849
Ref: option-outfile77561
Ref: option-stdout77886
Node: Options Affecting Scanner Behavior78868
Ref: option-case-insensitive79109
Ref: option-lex-compat79542
Ref: option-batch80074
Ref: option-interactive80598
Ref: option-7bit81952
Ref: option-8bit83256
Ref: option-default83668
Ref: option-always-interactive83732
Ref: option-posix84336
Ref: option-stack85483
Ref: option-stdinit85591
Ref: option-yylineno86069
Ref: option-yywrap86512
Node: Code-Level And API Options86780
Ref: option-ansi-definitions87007
Ref: option-ansi-prototypes87259
Ref: option-bison-bridge87506
Ref: option-bison-locations87845
Ref: option-noline88105
Ref: option-reentrant88619
Ref: option-c++89230
Ref: option-array89356
Ref: option-pointer89454
Ref: option-prefix89582
Ref: option-main91111
Ref: option-nounistd91295
Ref: option-yyclass91803
Node: Options for Scanner Speed and Size92289
Ref: option-align92838
Ref: option-ecs93339
Ref: option-meta-ecs94375
Ref: option-read94862
Ref: option-full96745
Ref: option-fast96940
Node: Debugging Options97866
Ref: option-backup98053
Ref: option-debug98598
Ref: option-perf-report99321
Ref: option-nodefault99947
Ref: option-trace100265
Ref: option-nowarn100556
Ref: option-verbose100624
Ref: option-warn101053
Node: Miscellaneous Options101272
Node: Performance101729
Node: Cxx111986
Node: Reentrant119590
Node: Reentrant Uses120267
Node: Reentrant Overview121830
Node: Reentrant Example122629
Node: Reentrant Detail123404
Node: Specify Reentrant123837
Node: Extra Reentrant Argument124484
Node: Global Replacement125736
Node: Init and Destroy Functions126965
Node: Accessor Methods129484
Node: Extra Data130828
Node: About yyscan_t133095
Node: Reentrant Functions133491
Ref: bison-functions134975
Node: Lex and Posix135716
Node: Memory Management143093
Ref: memory-management143239
Node: The Default Memory Management143467
Ref: The Default Memory Management-Footnote-1147273
Node: Overriding The Default Memory Management147426
Ref: Overriding The Default Memory Management-Footnote-1149825
Node: A Note About yytext And Memory149989
Node: Serialized Tables151222
Ref: serialization151366
Node: Creating Serialized Tables152131
Node: Loading and Unloading Serialized Tables153741
Node: Tables File Format155509
Node: Diagnostics162524
Node: Limitations165935
Node: Bibliography167884
Node: FAQ168557
Node: When was flex born?172797
Node: How do I expand backslash-escape sequences in C-style quoted strings?173174
Node: Why do flex scanners call fileno if it is not ANSI compatible?174478
Node: Does flex support recursive pattern definitions?175273
Node: How do I skip huge chunks of input (tens of megabytes) while using flex?176120
Node: Flex is not matching my patterns in the same order that I defined them.176587
Node: My actions are executing out of order or sometimes not at all.178333
Node: How can I have multiple input sources feed into the same scanner at the same time?179108
Node: Can I build nested parsers that work with the same input file?181096
Node: How can I match text only at the end of a file?182102
Node: How can I make REJECT cascade across start condition boundaries?182907
Node: Why cant I use fast or full tables with interactive mode?183922
Node: How much faster is -F or -f than -C?185180
Node: If I have a simple grammar cant I just parse it with flex?185492
Node: Why doesn't yyrestart() set the start state back to INITIAL?185973
Node: How can I match C-style comments?186600
Node: The period isn't working the way I expected.187414
Node: Can I get the flex manual in another format?188661
Node: Does there exist a "faster" NDFA->DFA algorithm?189150
Node: How does flex compile the DFA so quickly?189660
Node: How can I use more than 8192 rules?190627
Node: How do I abandon a file in the middle of a scan and switch to a new file?192039
Node: How do I execute code only during initialization (only before the first scan)?192592
Node: How do I execute code at termination?193370
Node: Where else can I find help?193696
Node: Can I include comments in the "rules" section of the file?194069
Node: I get an error about undefined yywrap().194448
Node: How can I change the matching pattern at run time?194925
Node: How can I expand macros in the input?195287
Node: How can I build a two-pass scanner?196320
Node: How do I match any string not matched in the preceding rules?197236
Node: I am trying to port code from AT&T lex that uses yysptr and yysbuf.198146
Node: Is there a way to make flex treat NULL like a regular character?198941
Node: Whenever flex can not match the input it says "flex scanner jammed".199462
Node: Why doesn't flex have non-greedy operators like perl does?200106
Node: Memory leak - 16386 bytes allocated by malloc.201459
Ref: faq-memory-leak201757
Node: How do I track the byte offset for lseek()?202725
Node: How do I use my own I/O classes in a C++ scanner?204236
Node: How do I skip as many chars as possible?205079
Node: deleteme00206156
Node: Are certain equivalent patterns faster than others?206597
Node: Is backing up a big deal?210016
Node: Can I fake multi-byte character support?211923
Node: deleteme01213365
Node: Can you discuss some flex internals?214475
Node: unput() messes up yy_at_bol216720
Node: The | operator is not doing what I want217823
Node: Why can't flex understand this variable trailing context pattern?219370
Node: The ^ operator isn't working220620
Node: Trailing context is getting confused with trailing optional patterns221856
Node: Is flex GNU or not?223100
Node: ERASEME53224774
Node: I need to scan if-then-else blocks and while loops225545
Node: ERASEME55226745
Node: ERASEME56227844
Node: ERASEME57229203
Node: Is there a repository for flex scanners?230202
Node: How can I conditionally compile or preprocess my flex input file?230517
Node: Where can I find grammars for lex and yacc?230990
Node: I get an end-of-buffer message for each character scanned.231337
Node: unnamed-faq-62231932
Node: unnamed-faq-63232951
Node: unnamed-faq-64234249
Node: unnamed-faq-65235216
Node: unnamed-faq-66236003
Node: unnamed-faq-67237119
Node: unnamed-faq-68238107
Node: unnamed-faq-69239250
Node: unnamed-faq-70239964
Node: unnamed-faq-71240726
Node: unnamed-faq-72241936
Node: unnamed-faq-73242980
Node: unnamed-faq-74243905
Node: unnamed-faq-75244851
Node: unnamed-faq-76245984
Node: unnamed-faq-77246691
Node: unnamed-faq-78247585
Node: unnamed-faq-79248584
Node: unnamed-faq-80250285
Node: unnamed-faq-81251604
Node: unnamed-faq-82254405
Node: unnamed-faq-83255363
Node: unnamed-faq-84257144
Node: unnamed-faq-85258248
Node: unnamed-faq-86259256
Node: unnamed-faq-87260195
Node: unnamed-faq-88260842
Node: unnamed-faq-90261674
Node: unnamed-faq-91262938
Node: unnamed-faq-92265367
Node: unnamed-faq-93265867
Node: unnamed-faq-94266795
Node: unnamed-faq-95268208
Node: unnamed-faq-96269727
Node: unnamed-faq-97270487
Node: unnamed-faq-98271155
Node: unnamed-faq-99271821
Node: unnamed-faq-100272751
Node: unnamed-faq-101273462
Node: What is the difference between YYLEX_PARAM and YY_DECL?274276
Node: Why do I get "conflicting types for yylex" error?274798
Node: How do I access the values set in a Flex action from within a Bison action?275328
Node: Appendices275759
Node: Makefiles and Flex275968
Ref: Makefiles and Flex-Footnote-1279168
Ref: Makefiles and Flex-Footnote-2279285
Ref: Makefiles and Flex-Footnote-3279471
Node: Bison Bridge279522
Ref: Bison Bridge-Footnote-1282191
Node: M4 Dependency282383
Ref: M4 Dependency-Footnote-1283788
Node: Common Patterns283923
Node: Numbers284214
Node: Identifiers285192
Node: Quoted Constructs286021
Node: Addresses287074
Node: Indices288389
Node: Concept Index288627
Node: Index of Functions and Macros313910
Node: Index of Variables318806
Node: Index of Data Types320472
Node: Index of Hooks321360
Node: Index of Scanner Options321928

End Tag Table
